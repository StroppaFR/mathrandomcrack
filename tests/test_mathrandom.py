import unittest

from mathrandomcrack.mathrandom import *

class TestMathRandom(unittest.TestCase):

    def test_v8_conversion(self):
        integer = 12092933408070727569
        expected = (integer >> 11) << 11
        for _ in range(10):
            double = v8_to_double(integer)
            integer = v8_from_double(double)
        self.assertEqual(integer, expected)

    def test_math_random_generation(self):
        math_random = MathRandom(6770692079143846949, 12009346246601641483)

        expected_doubles = [0.9742385602746879, 0.1481511886521042, 0.543673556132151, 0.776554156122268, 0.4070774492946395, 0.7285329198840588, 0.13973926820201366, 0.5736421400773356, 0.41667400100545327, 0.8912806642976514, 0.11204285276345027, 0.18404040839430247, 0.4782971487186798, 0.3796521669067089, 0.9892012954170081, 0.9697552194357352, 0.6966167349179451, 0.2634146257689207, 0.3489983866126112, 0.4393039244730844, 0.15723657672322866, 0.5732697001502722, 0.3363608031550396, 0.7090700200634418, 0.5286959878991273, 0.5078287948200143, 0.022943616157470648, 0.6551553161820237, 0.6284896147026541, 0.49998694315552816, 0.8649034511502789, 0.2629120209514204, 0.9002783858969124, 0.1397501858599427, 0.9039929075269798, 0.4576989046783827, 0.0947956489455567, 0.0595068197374502, 0.32746163228123415, 0.525262815224562, 0.9983071285287053, 0.7167870768352507, 0.8539612975205607, 0.7832119042919544, 0.08080137087888317, 0.5429897714329568, 0.7182961889994531, 0.3845317804144778, 0.002689699239920018, 0.13849809845172667, 0.287211348423441, 0.9750709028089097, 0.6836490775957172, 0.15267651599511545, 0.2787737619575896, 0.36268678147691835, 0.7738687831896665, 0.5913748804621017, 0.9831558069129928, 0.2777178491468483, 0.24657982760817454, 0.44016862318954464, 0.6962575901069894, 0.6510279645348068, 0.18836880033300052, 0.0748307177793821, 0.4195148090178126, 0.9893147372910016, 0.9724940577652632, 0.27999797561476003, 0.045785749739355786, 0.25908804604627256, 0.7005048965791644, 0.8650250641910667, 0.15841797304189253, 0.0693845619662874, 0.22354602835451864, 0.749507020763947, 0.3942969898144476, 0.21970616423971467, 0.11505475720713965, 0.6983446588496263, 0.8421662413364761, 0.023837970228779426, 0.12094459657302115, 0.3560306149463036, 0.15326170759886626, 0.4111046889573545, 0.03172794269168455, 0.26407934852612724, 0.43596030963609644, 0.9878040332714854, 0.1598127761728073, 0.23412524904062348, 0.24474634864855804, 0.43116407616041363, 0.5003629703143654, 0.6161629500777546, 0.11286711753883838, 0.23012062706659164, 0.12049784922614071, 0.1502940665384579, 0.9016579233326607, 0.1398769483861888, 0.393467024739662, 0.7898019017974195, 0.4022731522295312, 0.636409289263191, 0.19863712358599805, 0.6429054982279861, 0.006428908515869414, 0.7102661211473985, 0.41978405370899907, 0.9091906800788416, 0.4284484303075681, 0.5532118123691919, 0.01110623911911679, 0.5393619562300278, 0.5910370496750068, 0.19992532509028305, 0.13646179743046583, 0.7320738633431952, 0.7444229307963395, 0.8067643397728855, 0.6872848122935007, 0.6398155403789845, 0.48270362227304187, 0.8887545149146033, 0.4141369758905703, 0.9334605370967346, 0.6860794030671996, 0.13833765790260422, 0.0335521122295287, 0.6528964698535102, 0.5726281689229864, 0.3201584090821209, 0.6953015861164284, 0.666293894218843, 0.09316123123440401, 0.24139207624983194, 0.43899301926189094, 0.1509196064590388, 0.6271246626427348, 0.20570167270677597, 0.405849093465942, 0.879649126199882, 0.24834474608144763, 0.3380864300698956, 0.13176730677676862, 0.21226397221017068, 0.3862976380787799, 0.7537788843128865, 0.7542818053826482, 0.9364917195977182, 0.7003610869573811, 0.05161301128391971, 0.7859057743573763, 0.6792454020559878, 0.6397087308902907, 0.02828526921307495]

        # Test forward generation
        for d in expected_doubles:
            self.assertEqual(d, math_random.next())

        # Test backward generation
        for d in expected_doubles[::-1]:
            self.assertEqual(d, math_random.previous())
